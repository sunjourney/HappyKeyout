<?xml version="1.0"?>
<root>
    <!-- Vendors -->
    <devicevendordef>
        <vendorname>Topre</vendorname>
        <vendorid>0x0853</vendorid>
    </devicevendordef>

    <deviceproductdef>
        <productname>HHKB</productname>
        <productid>0x0100</productid>
    </deviceproductdef>

    <appdef>
        <appname>Emacs</appname>
        <equal>org.gnu.Emacs</equal>
    </appdef>

    <!-- configurations -->

    <item>
        <name>⌘: HHKB Custom</name>
        <item>
            <name>【 hit CONTROL_L =>  ESCAPE, holding CONTROL_L => hyper 】</name>
            <identifier>private.HHKB.control_hit2_esc</identifier>
            <not>Emacs</not>
            <device_only>DeviceVendor::Topre, DeviceProduct::HHKB</device_only>
            <autogen>__KeyOverlaidModifier__ KeyCode::CONTROL_L, KeyCode::CONTROL_L, KeyCode::ESCAPE</autogen>
        </item>
        
        <item>
            <name>【 ESCAPE =>  ` 】</name>
            <identifier>private.hhkb.esc_to_backquote</identifier>
            <device_only>DeviceVendor::Topre, DeviceProduct::HHKB</device_only>
            <autogen>__KeyToKey__ KeyCode::ESCAPE, KeyCode::BACKQUOTE</autogen>
        </item>

        <item>
            <name>【 ~ =>  FORWARD_DELETE 】</name>
            <identifier>private.hhkb.backquote_to_del</identifier>
            <device_only>DeviceVendor::Topre, DeviceProduct::HHKB</device_only>
            <autogen>__KeyToKey__ KeyCode::BACKQUOTE, ModifierFlag::NONE, KeyCode::FORWARD_DELETE</autogen>
            <autogen>__KeyToKey__ KeyCode::BACKQUOTE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT, KeyCode::DELETE</autogen>
        </item>

        <item>
            <name>【 SHIFT + DELETE => FORWARD_DELETE 】</name>
            <identifier>private.hhkb.shift_del_to_forward_del</identifier>
            <device_only>DeviceVendor::Topre, DeviceProduct::HHKB</device_only>
            <autogen>__KeyToKey__ KeyCode::DELETE, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_SHIFT, KeyCode::FORWARD_DELETE</autogen>
        </item>

        <item>
            <name>【 SHIFT x2 => CAPSLOCK 】</name>
            <identifier>private.hhkb.double_control_to_capslock</identifier>
            <autogen>__DoublePressModifier__ KeyCode::SHIFT_R, KeyCode::SHIFT_R, KeyCode::CAPSLOCK</autogen>
            <autogen>__DoublePressModifier__ KeyCode::SHIFT_L, KeyCode::SHIFT_L, KeyCode::CAPSLOCK</autogen>
        </item>
       
    </item>

</root>